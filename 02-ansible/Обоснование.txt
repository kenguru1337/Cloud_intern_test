Для балансировки нагрузки между тремя экземплярами вашего stateless Web-приложения используется алгоритм Round Robin. Этот метод прост в настройке и обеспечивает равномерное распределение входящих запросов без какой-либо дополнительной логики, что идеально подходит для идентичных контейнеров, работающих на одной машине. Round Robin является встроенным по умолчанию в NGINX и не требует дополнительных модулей или сложной конфигурации.

Почему Round Robin
	1	Простота реализации Round Robin — самый распространённый алгоритм благодаря своей лёгкости: балансировщик просто перебирает список серверов по кругу и отправляет запросы последовательно каждому из них без учёта текущей загрузки или состояния соединений.
	2	Равномерное распределение При достаточном объёме запросов каждый сервер получает примерно одинаковое число подключений. Это гарантирует, что ни один контейнер не окажется перегруженным, а все ресурсы используются эффективно.
	3	Встроенная поддержка NGINX В NGINX Round Robin включён по умолчанию. Для его активации достаточно перечислить бэкенды в блоке upstream, без дополнительных параметров. Вес серверов по умолчанию равен 1, что соответствует равномерному циклическому распределению.

Когда Round Robin наиболее уместен:

Stateless-приложения: если каждый запрос обрабатывается независимо (без сессий или привязки к конкретному серверу), Round Robin обеспечивает простое и надёжное решение.

Идентичные ресурсы: когда экземпляры приложения имеют одинаковую производительность и ёмкость, нет смысла учитывать вес или количество активных соединений.

Небольшие кластеры: для трёх контейнеров на одной VM алгоритм обеспечивает достаточную отказоустойчивость и балансировку без сложностей.